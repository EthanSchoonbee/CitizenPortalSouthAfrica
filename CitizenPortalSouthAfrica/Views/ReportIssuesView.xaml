<UserControl x:Class="CitizenPortalSouthAfrica.Views.ReportIssuesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:CitizenPortalSouthAfrica.Views"
             mc:Ignorable="d"
             d:DesignHeight="850" d:DesignWidth="850"
             Background="White">

    <!-- Define resources for styling components globally -->
    <UserControl.Resources>

        <!-- Global button style for consistent appearance -->
        <Style TargetType="Button">
            <Setter Property="Background" Value="DarkGreen"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="17"/>
            <Setter Property="Margin" Value="0,0,0,10"/>
            <Setter Property="Width" Value="350"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Style.Triggers>
                <!-- Change background when the button is hovered over -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="ForestGreen"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Style for 'Remove File' button -->
        <Style x:Key="RemoveFileButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Red"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="Margin" Value="70,0,0,0"/>
            <Setter Property="Width" Value="15"/>
            <Setter Property="Height" Value="15"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Content" Value="X"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Style.Triggers>
                <!-- Change background when hovering over the remove button -->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="DarkRed"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Style for header text blocks -->
        <Style x:Key="HeaderTextBlock" TargetType="TextBlock">
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>

        <!-- Style for error messages displayed in text blocks -->
        <Style x:Key="ErrorTextBlock" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Red"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>

    </UserControl.Resources>

    <Grid>
        <!-- Include the menu component at the top of the view -->
        <local:MenuComponentView DockPanel.Dock="Top" />

        <!-- StackPanel for stacking form elements vertically -->
        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">

            <!-- Header text for the form -->
            <TextBlock Text="Report an Issue Here" 
                       FontSize="25" FontWeight="Bold" 
                       Foreground="DarkGreen"
                       VerticalAlignment="Top"
                       HorizontalAlignment="Center" />

            <!-- Section with image and guide text -->
            <DockPanel HorizontalAlignment="Center" VerticalAlignment="Center" 
                       Margin="0,0,0,10" MinHeight="100">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <!-- Character image on the left side -->
                    <Image x:Name="CharacterImage" 
                           Source="pack://application:,,,/Assets/character.png" 
                           Width="50" Height="75" 
                           Grid.Column="0" />

                    <!-- Guide text bound to the ViewModel -->
                    <TextBlock x:Name="GuideTextBlock" 
                               Text="{Binding GuideText}" 
                               TextWrapping="Wrap"
                               Width="300"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Left"
                               TextAlignment="Left"
                               FontSize="12"
                               FontWeight="Bold"
                               Foreground="DimGray"
                               Background="FloralWhite"
                               Padding="10,10,0,10"
                               Grid.Column="1" />
                </Grid>
            </DockPanel>

            <!-- Progress bar displaying form completion percentage -->
            <TextBlock Text="Form Completion (%):" Margin="0,0,0,5" Style="{StaticResource HeaderTextBlock}" />
            <ProgressBar Minimum="0" Maximum="100" 
                         Value="{Binding FormCompletionPercentage}" 
                         Width="350" Height="5" Margin="0,0,0,10" />
            <TextBlock Text="{Binding FormCompletionPercentage, StringFormat={}{0}%}" HorizontalAlignment="Center" />

            <!-- Input field for issue location -->
            <TextBlock Text="Issue Location :" Style="{StaticResource HeaderTextBlock}" />
            <TextBlock Text="{Binding LocationError}" Style="{StaticResource ErrorTextBlock}" />
            <TextBox x:Name="LocationTextBox"
                     Text="{Binding Location, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     Width="350" Height="30" Margin="0,0,0,10"
                     GotFocus="LocationTextBox_GotFocus" />

            <!-- Dropdown to select issue category -->
            <TextBlock Text="Issue Category :" Style="{StaticResource HeaderTextBlock}" />
            <TextBlock Text="{Binding CategoryError}" Style="{StaticResource ErrorTextBlock}" />
            <ComboBox x:Name="CategoryComboBox" 
                        Width="350" Height="30"
                        Margin="0,0,0,10"
                        SelectedValue="{Binding Category, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        SelectedValuePath="Content"
                        GotFocus="CategoryComboBox_GotFocus">
                <ComboBoxItem Content="Sanitation" FontSize="15" FontWeight="SemiBold"/>
                <ComboBoxItem Content="Roads" FontSize="15" FontWeight="SemiBold"/>
                <ComboBoxItem Content="Utilities" FontSize="15" FontWeight="SemiBold"/>
            </ComboBox>

            <!-- Text field for description of the issue -->
            <TextBlock Text="Description of issue:" Style="{StaticResource HeaderTextBlock}" />
            <TextBlock Text="{Binding DescriptionError}" Style="{StaticResource ErrorTextBlock}" />
            <RichTextBox x:Name="DescriptionRichTextBox"
                         Width="350" Height="100" Margin="0,0,0,10"
                         VerticalScrollBarVisibility="Auto" AcceptsReturn="True"
                         GotFocus="DescriptionRichTextBox_GotFocus"
                         PreviewKeyDown="DescriptionRichTextBox_PreviewKeyDown">
                <FlowDocument>
                    <Paragraph>
                        <Run Text="{Binding Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </Paragraph>
                </FlowDocument>
            </RichTextBox>

            <!-- Button to attach media files -->
            <Button Content="Attach Media" Command="{Binding AttachFilesCommand}" 
                    Height="20"
                    Background="Goldenrod"
                    FontSize="14"/>

            <!-- List of attached files -->
            <TextBlock Text="Attached Files :" Style="{StaticResource HeaderTextBlock}" Visibility="{Binding AttachedFilesVisibility}"  />
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <ListBox ItemsSource="{Binding FileNames}" 
                         Width="350" Height="50" MaxHeight="50" 
                         Margin="0,10,0,10" 
                         VerticalAlignment="Top"
                         Background="FloralWhite"
                         Visibility="{Binding AttachedFilesVisibility}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="230" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <!-- Display attached file name with an option to remove it -->
                                <TextBlock Text="{Binding}" Margin="0,0,10,0" Grid.Column="0" TextTrimming="CharacterEllipsis" ToolTip="{Binding}" />
                                <Button Style="{StaticResource RemoveFileButtonStyle}" Command="{Binding DataContext.RemoveFileCommand, RelativeSource={RelativeSource AncestorType=ListBox}}" CommandParameter="{Binding}" Grid.Column="1" />
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </ScrollViewer>

            <!-- Clear, Submit, and Return buttons -->
            <Button Content="Clear" Command="{Binding ClearCommand}" />
            <Button Content="Submit" Command="{Binding SubmitCommand}" />
            <Button Content="Return" Command="{Binding NavigateToHomeCommand}" />

        </StackPanel>
    </Grid>
</UserControl>
